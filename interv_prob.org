* Интро

* Выводы на 21.05:

** Общие замечания:
- не перебивать
- выждать 3 сек прежде чем ответить
- произносить максимум 20 слов, потом заткнуться
- не говорить о том, о чем не спрашивают (не сообщать лишних подробностей
  о себе)
- когда просят рассказать о себе, спросить, читали ли они резюме и что их
  конкретно интересует
- сформулировать для работодателей минимум 5 вопросов
- сформулировать цели: что интересно, как вижу свое развитие, чем
  планирую заниматься (компиляторы и проектировка язков
  программирования)
- не унижать свои проекты и достижения

** Общие пробелы:

- пройти самые распространненые сортировки
- пройти структуры данных: авл-деревья, хэш-таблицы и т.д.

  Красно-черное дерево:
[[file:red_black_tree.org]]

  Бинарное дерево:
[[file:bin_search.org]]

  B-дерево:
[[file:b-tree.org]]

- для каждого алгоритма знать сложность
  [[file:./o-notation.org]]

- выяснить, как работает ОС: виртуальная память, процессы (как
  распределяется память, стек, планируются потоки, не путать потоки с
  фиберами)

  Процессы:
  [[file:./process-os.org]]

  Потоки:
  [[file./threads.org]]

- подтянуть терминологию
- освежить сикп: сопоставление паттернов (пролог), задержаные вычисление,
  недетерминистские вычисления

- выяснить про мьютексы, семафоры, lock-free алгоритмы

  Синхронизация:
  [[file:./synchronization-os.org]]

- постгресс
- докер
- командная строка
- разобраться в классификации языков: статически/динамически
  типизированные, императивные/функциональные, сильно
  типипзированные/слабо типизированные и т.д.

** Конкретные вопросы:

- Чем отличаются потоки от фиберов (горутин)?
- Как в го GC получает начальное дерево ссылок? Как GC вообще работает?
- Можно ли реализовать ~delay~ из сикпа (см. главу про задержанные
  вычисления) не через особую форму? Ответ: нет, нельзя, это
  макрос. Объяснить, почему нельзя.
- Почему не пошла получать вторую вышку? Ответ: в универах много
  ненужного мусора, жрет много времени, а КПД низкий.
- Почему нужно закрывать каналы в го? Почему их не может потом подчистить
  GC? Ответ: утечка памяти
- Может ли один процесс получить доступ к памяти другого процесса?
- Почему расстмариваю эрланг? Ответ: люблю функциональные языки и всегда
  готова изучать новый язык.
- Ддля чего оценивать алгоритмы? По каким критериям оцениваются?
